# The pipeline was originally auto-generated from AzWebApp > Deployment > Deployment Center
name: MrJobs.WebApi Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: BUILD
    runs-on: windows-latest # Ensure this matches the OS of the AzWebApp during build
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install .NET runtime
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.BUILD_DOTNET_VERSION }}
      - name: Build artifact
        shell: pwsh
        run: |
          dotnet restore "${{ vars.WEB_API_PROJECT_PATH }}"
          dotnet publish "${{ vars.WEB_API_PROJECT_PATH }}" --configuration Release --output "${{env.DOTNET_ROOT}}/webapi"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: ${{env.DOTNET_ROOT}}/webapi

  prod-approval:
    name: PROD APPROVAL
    runs-on: ubuntu-latest
    needs: build
    if: success()
    permissions:
      issues: write # opens an issue; approve via comment
    steps:
      - name: Await manual approval
        uses: trstringer/manual-approval@v1.9.0
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ vars.APPROVERS }} # GH usernames comma-separated
          minimum-approvals: 1

  prod-deploy:
    name: PROD DEPLOY
    runs-on: ubuntu-latest
    needs: prod-approval
    if: success()
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: drop
      - name: Replace appsettings.json tokens
        uses: cschleiden/replace-tokens@v1.3
        with:
          tokenPrefix: "{{"
          tokenSuffix: "}}"
          files: ./appsettings.json
        env:
          AUTH_CLIENT_ID: ${{ secrets.AUTH_CLIENT_ID }}
          AUTH_TENANT_ID: ${{ secrets.AUTH_TENANT_ID }}
          AUTH_AUTHORITY: ${{ secrets.AUTH_AUTHORITY }}
          AUTH_AUDIENCE: ${{ secrets.AUTH_AUDIENCE }}
          SYSTEM_API_KEY: ${{ secrets.SYSTEM_API_KEY }}
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C6876931E6E84FED87DC2D8B3FFC1912 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7CB7A0793A714183BA9950661852AD46 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7D2D09B355984C72AB6C2721245A3D87 }}
      - name: Set the Azure Web App runtime stack
        uses: Azure/cli@v2.1.0
        # See available runtime stacks using `az webapp list-runtimes --os-type windows`
        with:
          inlineScript: |
            az webapp config set --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} --name ${{ vars.AZURE_WEBAPP }} --runtime ${{ vars.AZURE_WEBAPP_RUNTIME_STACK }}
      - name: Deploy to Azure
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_WEBAPP }}
          slot-name: "Production"
          package: .
          restart: true
      - name: Logout of Azure
        run: |
          az logout
